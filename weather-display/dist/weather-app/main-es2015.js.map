{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/alert/alert.component.ts","./src/app/alert/alert.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/current-weather/current-weather.component.ts","./src/app/current-weather/current-weather.component.html","./src/app/forecast/forecast.component.ts","./src/app/forecast/forecast.component.html","./src/app/location-search/location-search.component.ts","./src/app/location-search/location-search.component.html","./src/app/services/location-conversion.service.ts","./src/app/services/weather-lookup.service.ts","./src/app/weather-dashboard/weather-dashboard.component.ts","./src/app/weather-dashboard/weather-dashboard.component.html","./src/app/weather-dashboard/weather.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAMhB;;;;;ICNlC,yEACE;IAAA,wEAAqB;IAAA,uDAAkB;IAAA,4DAAK;IAC5C,yEACE;IAAA,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAAiD;;IAAA,4DAAK;IAC1D,qEAAI;IAAA,wDAAqD;;IAAA,4DAAK;IAC9D,sEAAI;IAAA,wDAAsC;IAAA,4DAAK;IAC/C,qEAAG;IAAA,wDAAwB;IAAA,4DAAI;IACjC,4DAAM;IACR,4DAAM;;;IARiB,0DAAkB;IAAlB,yGAAkB;IAEjC,0DAAqB;IAArB,4GAAqB;IACrB,0DAAiD;IAAjD,6MAAiD;IACjD,0DAAqD;IAArD,kNAAqD;IACrD,0DAAsC;IAAtC,sIAAsC;IACvC,0DAAwB;IAAxB,+GAAwB;;ADMxB,MAAM,cAAc;IACzB,YACS,SAAuC,EACd,IAA+B;QADxD,cAAS,GAAT,SAAS,CAA8B;QACd,SAAI,GAAJ,IAAI,CAA2B;IAC9D,CAAC;;4EAJO,cAAc,0MAGf,wEAAe;8FAHd,cAAc;QCb3B,4GACE;;QADqB,6EAA0B;;6FDapC,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,EAAE;aACd;;sBAII,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEhB3B;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,aAAa,CAAC;KACvB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,+EAAuC;;6FDO1B,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACX;AACN;AACoB;AAEM;AAEpB;AACgC;;AAcxE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,uEAAa;YACb,4FAAuB;YACvB,4DAAY;YACZ,+EAAa;YACb,0EAAgB;SACjB;mIAIU,SAAS,mBAXL,2DAAY,aAEzB,uEAAa;QACb,4FAAuB;QACvB,4DAAY;QACZ,+EAAa;QACb,0EAAgB;6FAKP,SAAS;cAZrB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,2DAAY,CAAC;gBAC5B,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,4DAAY;oBACZ,+EAAa;oBACb,0EAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AAEpB;AAEa;;;;;;;;;ICgBlD,6EAME;IAFA,oUAAqB;IAErB,2EAAU;IAAA,kEAAO;IAAA,4DAAW;IAC9B,4DAAS;;;IASX,mEAIK;;;IADH,sJAAyC;;;AD3B1C,MAAM,uBAAuB;IAQlC,YAAmB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAH1B,kBAAa,GAAyB,IAAI,0DAAY,EAAE,CAAC;QACzD,iBAAY,GAAyB,IAAI,0DAAY,EAAE,CAAC;IAE3B,CAAC;IAExC,QAAQ,KAAI,CAAC;IAEb,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,SAAS;QACP,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qEAAc,EAAE;YACjD,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,IAAI,CAAC,MAAM;SAClB,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,QAAQ,IAAI,EAAE;YACZ,KAAK,WAAW;gBACd,OAAO,iBAAiB,CAAC;YAC3B,KAAK,aAAa;gBAChB,OAAO,mBAAmB,CAAC;YAC7B,KAAK,mBAAmB;gBACtB,OAAO,kBAAkB,CAAC;YAC5B,KAAK,qBAAqB;gBACxB,OAAO,oBAAoB,CAAC;YAC9B,KAAK,QAAQ;gBACX,OAAO,cAAc,CAAC;YACxB,KAAK,MAAM;gBACT,OAAO,YAAY,CAAC;YACtB,KAAK,OAAO;gBACV,OAAO,IAAI,CAAC;YACd,KAAK,MAAM;gBACT,OAAO,YAAY,CAAC;YACtB,KAAK,MAAM;gBACT,OAAO,aAAa,CAAC;YACvB,KAAK,KAAK;gBACR,OAAO,WAAW,CAAC;SACtB;IACH,CAAC;IAED,aAAa,CAAC,IAAY;QACxB,IAAI,KAAa,CAAC;QAClB,QAAQ,IAAI,EAAE;YACZ,KAAK,WAAW;gBACd,KAAK,GAAG,eAAe,CAAC;gBACxB,MAAM;YACR,KAAK,aAAa;gBAChB,KAAK,GAAG,iBAAiB,CAAC;gBAC1B,MAAM;YACR,KAAK,mBAAmB;gBACtB,KAAK,GAAG,uBAAuB,CAAC;gBAChC,MAAM;YACR,KAAK,qBAAqB;gBACxB,KAAK,GAAG,yBAAyB,CAAC;gBAClC,MAAM;YACR,KAAK,QAAQ;gBACX,KAAK,GAAG,YAAY,CAAC;gBACrB,MAAM;YACR,KAAK,MAAM;gBACT,KAAK,GAAG,UAAU,CAAC;gBACnB,MAAM;YACR,KAAK,OAAO;gBACV,KAAK,GAAG,WAAW,CAAC;gBACpB,MAAM;YACR,KAAK,MAAM;gBACT,KAAK,GAAG,UAAU,CAAC;gBACnB,MAAM;YACR,KAAK,MAAM;gBACT,KAAK,GAAG,UAAU,CAAC;gBACnB,MAAM;YACR,KAAK,KAAK;gBACR,KAAK,GAAG,SAAS,CAAC;gBAClB,MAAM;YACR;gBACE,KAAK,GAAG,eAAe,CAAC;gBACxB,MAAM;SACT;QACD,OAAO,0BAA0B,KAAK,EAAE,CAAC;IAC3C,CAAC;;8FA1FU,uBAAuB;uGAAvB,uBAAuB;QCZpC,yEAQE;QAAA,qFAMkB;QAHhB,8KAAiB,wBAAoB,IAAC,oHACtB,wBAAoB,IADE;QAGxC,4DAAkB;QAElB,yEACE;QAAA,yEACE;QAAA,uEACG;QAAA,uDACD;QAAA,yHAME;QAEJ,4DAAO;QACP,uEACE;QAAA,uDACF;;QAAA,4DAAI;QACJ,2EACG;QAAA,wDACC;;QAAA,mEACH;QAAA,4DAAO;QACR,iHAIC;QACD,0EAA8B;QAAA,wDAA6B;QAAA,4DAAM;QACnE,4DAAM;QAEN,2EACE;QAAA,4EACE;QAAA,oEAAiC;QACjC,wDAEA;;QAAA,oEACD;QAAA,4DAAO;QACR,4EACE;QAAA,oEAA8B;QAC9B,wDAA2D;;QAAA,4DAC5D;QACD,4EACE;QAAA,oEAA8B;QAC9B,wDAEF;;QAAA,4DAAO;QACP,4EACE;QAAA,oEAAiC;QACjC,wDAAiE;;QAAA,4DAClE;QACH,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAhEJ,gWAIE;QAIA,0DAAmC;QAAnC,gGAAmC;QAS9B,0DACD;QADC,uFACD;QAEE,0DAA0B;QAA1B,qHAA0B;QAQ5B,0DACF;QADE,4NACF;QAEG,0DACC;QADD,+MACC;QAGF,0DAAsB;QAAtB,oFAAsB;QAIM,0DAA6B;QAA7B,+HAA6B;QAMzD,0DAEA;QAFA,8OAEA;QAIA,0DAA2D;QAA3D,iOAA2D;QAI3D,0DAEF;QAFE,kPAEF;QAGE,0DAAiE;QAAjE,uOAAiE;;6FDlD5D,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;kBAEE,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,oDAAM;;kBACN,oDAAM;;;;;;;;;;;;;;AElBT;AAAA;AAAA;AAAA;AAAiD;;;;;ICgCvC,wEACE;IAAA,0EACE;IAAA,uEACG;IAAA,uDACC;;IAAA,mEACH;IAAA,4DAAO;IAER,uEACG;IAAA,uDACC;;IAAA,mEACH;IAAA,4DAAO;IACV,4DAAM;IACN,2EACE;IAAA,oEAA6B;IAAC,wDAEhC;;IAAA,4DAAM;IACN,2EACE;IAAA,oEAA4B;IAAC,wDAE/B;;IAAA,4DAAM;IACN,2EACE;IAAA,2EACE;IAAA,wEACG;IAAA,oEAAiC;IAAC,wDACO;;IAAA,4DAC3C;IACH,4DAAM;IACN,2EACE;IAAA,wEACG;IAAA,oEAA8B;IAAC,wDACM;;IAAA,4DACvC;IACH,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,oEAMK;IACL,wDAEF;;IAAA,4DAAM;IACR,qEAAe;;;IA1CR,0DACC;IADD,0MACC;IAID,0DACC;IADD,yMACC;IAI0B,0DAEhC;IAFgC,6NAEhC;IAE+B,0DAE/B;IAF+B,2NAE/B;IAIyC,0DACO;IADP,+MACO;IAKV,0DACM;IADN,2MACM;IAOxC,0DAGE;IAHF,+PAGE;IAEJ,0DAEF;IAFE,uQAEF;;;;;IApEN,yEASE;IAAA,yEACE;IAAA,uDAOF;;IAAA,4DAAM;IACN,kEAAkD;IAClD,yEACE;IAAA,0EACE;IAAA,uDACF;IAAA,4DAAM;IACN,sEAAK;IAAA,uDAAwC;;IAAA,4DAAM;IACnD,wJACE;IA6CJ,4DAAM;IACR,4DAAM;;;;;IApEJ,oTAIE;IAGA,0DAOF;IAPE,wSAOF;IACa,0DAAgC;IAAhC,gHAAgC;IAEtC,0DAA6C;IAA7C,6LAA6C;IAChD,0DACF;IADE,oHACF;IACK,0DAAwC;IAAxC,yLAAwC;IAC/B,0DAAsB;IAAtB,4GAAsB;;;IAhC9C,wEACE;IAAA,yEACE;IAAA,yEACE;IAAA,6DAAwB;IACxB,wEAA0B;IAAA,mEAAQ;IAAA,4DAAK;IACvC,oEAAG;IAAA,uDAAuB;IAAA,4DAAI;IAChC,4DAAM;IACN,yEACE;IAAA,8HASE;IA+DJ,4DAAM;IACR,4DAAM;IACR,qEAAe;;;IA7EN,0DAAuB;IAAvB,2HAAuB;IAIxB,0DAAiD;IAAjD,4HAAiD;;;;ADDlD,MAAM,iBAAiB;IAE5B;IAAe,CAAC;IAEhB,OAAO,CAAC,IAAY;QAClB,QAAQ,IAAI,EAAE;YACZ,KAAK,WAAW;gBACd,OAAO,iBAAiB,CAAC;YAC3B,KAAK,aAAa;gBAChB,OAAO,mBAAmB,CAAC;YAC7B,KAAK,mBAAmB;gBACtB,OAAO,kBAAkB,CAAC;YAC5B,KAAK,qBAAqB;gBACxB,OAAO,oBAAoB,CAAC;YAC9B,KAAK,QAAQ;gBACX,OAAO,cAAc,CAAC;YACxB,KAAK,MAAM;gBACT,OAAO,YAAY,CAAC;YACtB,KAAK,OAAO;gBACV,OAAO,aAAa,CAAC;YACvB,KAAK,MAAM;gBACT,OAAO,YAAY,CAAC;YACtB,KAAK,MAAM;gBACT,OAAO,aAAa,CAAC;YACvB,KAAK,KAAK;gBACR,OAAO,WAAW,CAAC;SACtB;IACH,CAAC;;kFA3BU,iBAAiB;iGAAjB,iBAAiB;;QCR9B,gIACE;;QADY,iHAAsB;;6FDQvB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;kBAEE,mDAAK;;;;;;;;;;;;;;AETR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACR;AACZ;;;;;;;;;;;ICkBzC,gFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFwC,8EAAkB;IACrE,0DACF;IADE,uFACF;;;IAEF,4EACG;IAAA,8FAAmC;IAAA,4DACrC;;ADhBI,MAAM,uBAAuB;IAQlC;QAPkC,aAAQ,GAAG,OAAO,CAAC;QAG3C,kBAAa,GAAyB,IAAI,0DAAY,EAAE,CAAC;QACnE,WAAM,GAAgB,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,iBAAY,GAAyB,IAAI,0DAAY,EAAE,CAAC;QAClE,kBAAa,GAAY,KAAK,CAAC;IAChB,CAAC;IAEhB,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YACnD,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAC,MAAmB;QACpC,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,eAAe,EAAE;YACxC,OAAO,IAAI,CAAC;SACb;QACD,OAAO;YACL,aAAa,EAAE;gBACb,KAAK,EAAE,KAAK;aACb;SACF,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,KAAgB;QACjC,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACxC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACrC;IACH,CAAC;;8FAnCU,uBAAuB;uGAAvB,uBAAuB;QCVpC,oFACE;QAAA,4EAAW;QAAA,0EAAe;QAAA,4DAAY;QACtC,8EAAoB;QAAA,iEAAM;QAAA,4DAAW;QACrC,sEASA;QAAA,4EACE;QADgC,qJAAS,oBAAgB,EAAE,CAAC,IAAC;QAC7D,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC5B,4DAAS;QACT,yFAKE;QAFA,iLAAkB,qCAAiC,IAAC;QAEpD,mIACE;QAEJ,4DAAmB;QACnB,iIACG;QAEL,4DAAiB;;;QAtBb,0DAAsB;QAAtB,mFAAsB;QAeV,0DAAwC;QAAxC,wFAAwC;QAI3C,0DAAsB;QAAtB,oFAAsB;;6FDdtB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;kBAEE,mDAAK;mBAAC,yBAAyB;;kBAC/B,mDAAK;;kBAEL,oDAAM;;kBAEN,oDAAM;;;;;;;;;;;;;;AEhBT;AAAA;AAAA;AAAA;AAA2C;;;AAKpC,MAAM,0BAA0B;IACrC,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE9C,eAAe,CAAC,QAAgB;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,oCAAoC,QAAQ,EAAE,CAC/C,CAAC;IACJ,CAAC;;oGAPU,0BAA0B;6GAA1B,0BAA0B,WAA1B,0BAA0B;6FAA1B,0BAA0B;cADtC,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,oBAAoB;IAC/B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE9C,UAAU,CAAC,QAAgB;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,oCAAoC,QAAQ,EAAE,CAC/C,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,OAAgB;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,iCAAiC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,SAAS,EAAE,CACzE,CAAC;IACJ,CAAC;;wFAbU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB;6FAApB,oBAAoB;cADhC,wDAAU;;;;;;;;;;;;;;ACNX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;;;;;;AAa1D,MAAM,gBAAgB;IAU3B,YACU,0BAAsD,EACtD,cAAoC;QADpC,+BAA0B,GAA1B,0BAA0B,CAA4B;QACtD,mBAAc,GAAd,cAAc,CAAsB;QAXZ,aAAQ,GAAG,OAAO,CAAC;QAErD,aAAQ,GAAW,kBAAkB,CAAC;QAMtC,kBAAa,GAAY,KAAK,CAAC;IAI5B,CAAC;IAEJ,QAAQ,KAAU,CAAC;IAEnB,aAAa,CAAC,KAAa;QACzB,IAAI,CAAC,0BAA0B;aAC5B,eAAe,CAAC,KAAK,CAAC;aACtB,SAAS,CAAC,CAAC,MAAgB,EAAE,EAAE;YAC9B,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;YACnE,IAAI,CAAC,cAAc;iBAChB,UAAU,CAAC,OAAO,CAAC;iBACnB,SAAS,CAAC,CAAC,OAAwB,EAAE,EAAE;gBACtC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,SAAS,CAAC;gBACxC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC7B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC3B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC7B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YACnC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;;gFAtCU,gBAAgB;gGAAhB,gBAAgB;QCb7B,qFAOmB;QAFjB,uKAAiB,yBAAqB,IAAC,6GACvB,wBAAoB,IADG;QAExC,4DAAkB;QACnB,wFACE;QAAA,wEAAuB;QAAA,2EAAgB;QAAA,4DAAK;QAC9C,4DAAqB;QAErB,wFACE;QAAA,wEAAuB;QAAA,oEAAS;QAAA,4DAAK;QACvC,4DAAqB;;QAbnB,8FAAiC;QAOf,0DAAmB;QAAnB,gFAAmB;QAInB,0DAAkB;QAAlB,+EAAkB;;6FDCzB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;kBAEE,mDAAK;mBAAC,yBAAyB;;;;;;;;;;;;;;AEdlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACQ;AAEW;AACT;AACJ;AACE;AACgB;AACZ;AAE4B;AACF;AAC7B;AACkB;AACT;AACsB;AACpB;AACR;AACD;;AA+BnD,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,mBATb,CAAC,iGAA0B,EAAE,sFAAoB,CAAC,YAZpD;YACP,4DAAY;YACZ,+EAAkB;YAClB,kEAAmB;YACnB,oFAAqB;YACrB,wEAAe;YACf,oEAAa;YACb,yEAAe;YACf,sEAAc;YACd,oEAAa;YACb,sEAAgB;SACjB;mIAUU,aAAa,mBA3BtB,kGAAuB;QACvB,mGAAuB;QACvB,8EAAgB;QAChB,+EAAiB;QACjB,sEAAc,aAGd,4DAAY;QACZ,+EAAkB;QAClB,kEAAmB;QACnB,oFAAqB;QACrB,wEAAe;QACf,oEAAa;QACb,yEAAe;QACf,sEAAc;QACd,oEAAa;QACb,sEAAgB,aAIhB,kGAAuB;QACvB,mGAAuB;QACvB,8EAAgB;QAChB,+EAAiB;QACjB,sEAAc;6FAGL,aAAa;cA7BzB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,kGAAuB;oBACvB,mGAAuB;oBACvB,8EAAgB;oBAChB,+EAAiB;oBACjB,sEAAc;iBACf;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,+EAAkB;oBAClB,kEAAmB;oBACnB,oFAAqB;oBACrB,wEAAe;oBACf,oEAAa;oBACb,yEAAe;oBACf,sEAAc;oBACd,oEAAa;oBACb,sEAAgB;iBACjB;gBACD,SAAS,EAAE,CAAC,iGAA0B,EAAE,sFAAoB,CAAC;gBAC7D,OAAO,EAAE;oBACP,kGAAuB;oBACvB,mGAAuB;oBACvB,8EAAgB;oBAChB,+EAAiB;oBACjB,sEAAc;iBACf;aACF;;;;;;;;;;;;;;ACjDD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, Inject } from \"@angular/core\";\r\nimport { WeatherResponse } from \"../models/weather-response.interface\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA\r\n} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"alert-component\",\r\n  templateUrl: \"./alert.component.html\",\r\n  styleUrls: []\r\n})\r\nexport class AlertComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: WeatherResponse[\"alerts\"]\r\n  ) {}\r\n}\r\n","<div class=\"container\" *ngFor=\"let alert of data\">\r\n  <h1 mat-dialog-title>{{ alert?.title }}</h1>\r\n  <div mat-dialog-content>\r\n    <h2>{{ alert?.severity }}</h2>\r\n    <h3>Issued: {{ alert?.time * 1000 | date: \"medium\" }}</h3>\r\n    <h3>Expires: {{ alert?.expires * 1000 | date: \"medium\" }}</h3>\r\n    <h3>Affected regions: {{ alert?.regions }}</h3>\r\n    <p>{{ alert?.description }}</p>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'weather-app';\r\n}\r\n","<weather-dashboard></weather-dashboard>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\n\r\nimport { WeatherModule } from \"./weather-dashboard/weather.module\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    WeatherModule,\r\n    MatToolbarModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, Input, Output } from \"@angular/core\";\r\nimport { WeatherData } from \"../models/weather-data.interface\";\r\nimport { EventEmitter } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { AlertComponent } from \"../alert/alert.component\";\r\nimport { WeatherResponse } from \"../models/weather-response.interface\";\r\n\r\n@Component({\r\n  selector: \"current-weather\",\r\n  templateUrl: \"./current-weather.component.html\",\r\n  styleUrls: [\"./current-weather.component.scss\"]\r\n})\r\nexport class CurrentWeatherComponent implements OnInit {\r\n  @Input() currentWeather: WeatherData;\r\n  @Input() location: string;\r\n  @Input() locationOptions: string[];\r\n  @Input() alerts: WeatherResponse[\"alerts\"];\r\n  @Output() locationQuery: EventEmitter<string> = new EventEmitter();\r\n  @Output() weatherQuery: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  getLocations(event: string) {\r\n    this.locationQuery.emit(event);\r\n  }\r\n\r\n  queryWeather(event: string) {\r\n    this.weatherQuery.emit(event);\r\n  }\r\n\r\n  getAlerts() {\r\n    const dialogRef = this.dialog.open(AlertComponent, {\r\n      height: \"300px\",\r\n      data: this.alerts\r\n    });\r\n  }\r\n\r\n  getIcon(icon: string): string {\r\n    switch (icon) {\r\n      case \"clear-day\":\r\n        return \"wi wi-day-sunny\";\r\n      case \"clear-night\":\r\n        return \"wi wi-night-clear\";\r\n      case \"partly-cloudy-day\":\r\n        return \"wi wi-day-cloudy\";\r\n      case \"partly-cloudy-night\":\r\n        return \"wi wi-night-cloudy\";\r\n      case \"cloudy\":\r\n        return \"wi wi-cloudy\";\r\n      case \"rain\":\r\n        return \"wi wi-rain\";\r\n      case \"sleet\":\r\n        return icon;\r\n      case \"snow\":\r\n        return \"wi wi-snow\";\r\n      case \"wind\":\r\n        return \"wi wi-windy\";\r\n      case \"fog\":\r\n        return \"wi wi-fog\";\r\n    }\r\n  }\r\n\r\n  getBackground(icon: string): string {\r\n    let image: string;\r\n    switch (icon) {\r\n      case \"clear-day\":\r\n        image = \"clear-day.jpg\";\r\n        break;\r\n      case \"clear-night\":\r\n        image = \"clear-night.jpg\";\r\n        break;\r\n      case \"partly-cloudy-day\":\r\n        image = \"partly-cloudy-day.jpg\";\r\n        break;\r\n      case \"partly-cloudy-night\":\r\n        image = \"partly-cloudy-night.jpg\";\r\n        break;\r\n      case \"cloudy\":\r\n        image = \"cloudy.jpg\";\r\n        break;\r\n      case \"rain\":\r\n        image = \"rain.jpg\";\r\n        break;\r\n      case \"sleet\":\r\n        image = \"sleet.jpg\";\r\n        break;\r\n      case \"snow\":\r\n        image = \"snow.jpg\";\r\n        break;\r\n      case \"wind\":\r\n        image = \"wind.jpg\";\r\n        break;\r\n      case \"fog\":\r\n        image = \"fog.jpg\";\r\n        break;\r\n      default:\r\n        image = \"clear-day.jpg\";\r\n        break;\r\n    }\r\n    return `../../../assets/images/${image}`;\r\n  }\r\n}\r\n","<div\r\n  class=\"background\"\r\n  [ngStyle]=\"{\r\n    'background-image': currentWeather?.icon\r\n      ? 'url(' + getBackground(currentWeather?.icon) + ')'\r\n      : 'url(../../../assets/images/partly-cloudy-day.jpg)'\r\n  }\"\r\n>\r\n  <location-search\r\n    class=\"search-bar\"\r\n    [locationOptions]=\"locationOptions\"\r\n    (locationQuery)=\"getLocations($event)\"\r\n    (weatherQuery)=\"queryWeather($event)\"\r\n  >\r\n  </location-search>\r\n\r\n  <div class=\"weather-dashboard\">\r\n    <div class=\"weather-content\">\r\n      <span\r\n        >{{ location }}\r\n        <button\r\n          mat-icon-button\r\n          *ngIf=\"alerts?.length > 0\"\r\n          class=\"alert\"\r\n          (click)=\"getAlerts()\"\r\n        >\r\n          <mat-icon>warning</mat-icon>\r\n        </button>\r\n      </span>\r\n      <p class=\"caption\">\r\n        {{ currentWeather?.time * 1000 | date: \"medium\" }}\r\n      </p>\r\n      <span id=\"temperature\"\r\n        >{{ currentWeather?.temperature | number: \"1.0-0\"\r\n        }}<i id=\"degree\" class=\"wi wi-fahrenheit\"></i\r\n      ></span>\r\n      <i\r\n        *ngIf=\"currentWeather\"\r\n        class=\"weather-icon\"\r\n        [ngClass]=\"getIcon(currentWeather?.icon)\"\r\n      ></i>\r\n      <div class=\"weather-forecast\">{{ currentWeather?.summary }}</div>\r\n    </div>\r\n\r\n    <div class=\"weather-metrics\">\r\n      <span class=\"item\">\r\n        <i class=\"wi wi-thermometer\"></i>\r\n        Feels like:\r\n        {{ currentWeather?.apparentTemperature | number: \"1.0-0\" }}\r\n        <i class=\"wi wi-fahrenheit\"></i\r\n      ></span>\r\n      <span class=\"item\">\r\n        <i class=\"wi wi-humidity\"></i>\r\n        Humidity: {{ currentWeather?.humidity | number: \"1.0-0\" }}%</span\r\n      >\r\n      <span class=\"item\">\r\n        <i class=\"wi wi-umbrella\"></i>\r\n        Chance of rain:\r\n        {{ currentWeather?.precipProbability | number: \"1.0-0\" }} %\r\n      </span>\r\n      <span class=\"item\">\r\n        <i class=\"wi wi-strong-wind\"></i>\r\n        Wind speed: {{ currentWeather?.windSpeed | number: \"1.0-0\" }} mph</span\r\n      >\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from \"@angular/core\";\r\nimport { Weather } from \"../models/weather.interface\";\r\n\r\n@Component({\r\n  selector: \"forecast-component\",\r\n  templateUrl: \"./forecast.component.html\",\r\n  styleUrls: [\"./forecast.component.scss\"]\r\n})\r\nexport class ForecastComponent {\r\n  @Input() forecast: Weather;\r\n  constructor() {}\r\n\r\n  getIcon(icon: string): string {\r\n    switch (icon) {\r\n      case \"clear-day\":\r\n        return \"wi wi-day-sunny\";\r\n      case \"clear-night\":\r\n        return \"wi wi-night-clear\";\r\n      case \"partly-cloudy-day\":\r\n        return \"wi wi-day-cloudy\";\r\n      case \"partly-cloudy-night\":\r\n        return \"wi wi-night-cloudy\";\r\n      case \"cloudy\":\r\n        return \"wi wi-cloudy\";\r\n      case \"rain\":\r\n        return \"wi wi-rain\";\r\n      case \"sleet\":\r\n        return \"wi wi-sleet\";\r\n      case \"snow\":\r\n        return \"wi wi-snow\";\r\n      case \"wind\":\r\n        return \"wi wi-windy\";\r\n      case \"fog\":\r\n        return \"wi wi-fog\";\r\n    }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"forecast?.data\">\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <ng-content select=\"h1\"></ng-content>\r\n      <h2 class=\"card-subtitle\">Summary:</h2>\r\n      <p>{{ forecast?.summary }}</p>\r\n    </div>\r\n    <div class=\"container\">\r\n      <div\r\n        *ngFor=\"let met of forecast?.data; let i = index\"\r\n        class=\"text-center \"\r\n        [ngClass]=\"{\r\n          border: met?.temperatureHigh || i == 0,\r\n          'daily-forecast': met?.temperatureHigh,\r\n          'hourly-forecast': !met?.temperatureHigh\r\n        }\"\r\n      >\r\n        <div class=\"header\">\r\n          {{\r\n            met?.time * 1000\r\n              | date\r\n                : ((this.forecast?.data)[0].temperatureHigh == null\r\n                    ? \"shortTime\"\r\n                    : \"EEEE\")\r\n          }}\r\n        </div>\r\n        <i id=\"icon\" class=\"{{ getIcon(met?.icon) }}\"></i>\r\n        <div class=\"content\">\r\n          <div [ngClass]=\"{ summary: met?.temperatureHigh }\">\r\n            {{ met?.summary }}\r\n          </div>\r\n          <div>{{ met?.temperature | number: \"1.0-0\" }}</div>\r\n          <ng-container *ngIf=\"met?.moonPhase\">\r\n            <div class=\"item pair\">\r\n              <span\r\n                >High: {{ met?.temperatureHigh | number: \"1.0-0\"\r\n                }}<i id=\"degree\" class=\"wi wi-fahrenheit\"></i\r\n              ></span>\r\n\r\n              <span\r\n                >Low: {{ met?.temperatureLow | number: \"1.0-0\"\r\n                }}<i id=\"degree\" class=\"wi wi-fahrenheit\"></i\r\n              ></span>\r\n            </div>\r\n            <div class=\"item\">\r\n              <i class=\"wi wi-sunrise\"></i> Sunrise at:\r\n              {{ met?.sunriseTime * 1000 | date: \"shortTime\" }}\r\n            </div>\r\n            <div class=\"item\">\r\n              <i class=\"wi wi-sunset\"></i> Sunset at:\r\n              {{ met?.sunsetTime * 1000 | date: \"shortTime\" }}\r\n            </div>\r\n            <div class=\"pair\">\r\n              <div class=\"item\">\r\n                <span\r\n                  ><i class=\"wi wi-strong-wind\"></i> Windpeed:\r\n                  {{ met?.windSpeed | number: \"1.0-0\" }} mph</span\r\n                >\r\n              </div>\r\n              <div class=\"item\">\r\n                <span\r\n                  ><i class=\"wi wi-humidity\"></i> Humidity:\r\n                  {{ met?.humidity | number: \"1.0-0\" }}%</span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"item\">\r\n              <i\r\n                class=\"wi\"\r\n                [ngClass]=\"{\r\n                  'wi-umbrella': met?.precipType === 'rain',\r\n                  'wi-snowflake-cold': met?.precipType === 'snow'\r\n                }\"\r\n              ></i>\r\n              {{ met?.precipProbability | number: \"1.0-0\" }}% Chance of\r\n              {{ met?.precipType }}\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit, Input, Output } from \"@angular/core\";\r\nimport { FormControl, Validators } from \"@angular/forms\";\r\nimport { EventEmitter } from \"@angular/core\";\r\nimport { MatOption } from \"@angular/material/core\";\r\n\r\n@Component({\r\n  selector: \"location-search\",\r\n  templateUrl: \"./location-search.component.html\",\r\n  styleUrls: [\"./location-search.component.scss\"]\r\n})\r\nexport class LocationSearchComponent implements OnInit {\r\n  @Input(\"matAutocompletePosition\") position = \"below\";\r\n  @Input()\r\n  locationOptions: string[];\r\n  @Output() locationQuery: EventEmitter<string> = new EventEmitter();\r\n  search: FormControl = new FormControl(\"\", [Validators.required]);\r\n  @Output() weatherQuery: EventEmitter<string> = new EventEmitter();\r\n  isValidSearch: boolean = false;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.search.setValue(\"Baltimore,MD,USA\");\r\n    this.weatherQuery.emit(this.search.value);\r\n    this.search.valueChanges.subscribe((value: string) => {\r\n      if (this.search.valid) {\r\n        this.locationQuery.emit(value);\r\n      }\r\n    });\r\n  }\r\n\r\n  validateSearchTerm(search: FormControl) {\r\n    if (search.value in this.locationOptions) {\r\n      return null;\r\n    }\r\n    return {\r\n      isValidSearch: {\r\n        valid: false\r\n      }\r\n    };\r\n  }\r\n\r\n  onLocationSelected(event: MatOption) {\r\n    if (this.validateSearchTerm(this.search)) {\r\n      this.weatherQuery.emit(event.value);\r\n    }\r\n  }\r\n}\r\n","<mat-form-field appearance=\"fill\" class=\"search-bar\">\r\n  <mat-label>Search Location</mat-label>\r\n  <mat-icon matPrefix>search</mat-icon>\r\n  <input\r\n    matInput\r\n    [formControl]=\"search\"\r\n    id=\"search-term\"\r\n    type=\"text\"\r\n    placeholder=\"Enter city or zip\"\r\n    [matAutocomplete]=\"searchOptions\"\r\n    matAutocompletePosition=\"below\"\r\n  />\r\n  <button matSuffix mat-icon-button (click)=\"search.setValue('')\">\r\n    <mat-icon>clear</mat-icon>\r\n  </button>\r\n  <mat-autocomplete\r\n    autoActiveFirstOption\r\n    #searchOptions=\"matAutocomplete\"\r\n    (optionSelected)=\"onLocationSelected($event.option)\"\r\n  >\r\n    <mat-option *ngFor=\"let location of locationOptions\" [value]=\"location\">\r\n      {{ location }}\r\n    </mat-option>\r\n  </mat-autocomplete>\r\n  <mat-error *ngIf=\"search.invalid\"\r\n    >Please select a value from the list</mat-error\r\n  >\r\n</mat-form-field>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class LocationConverstionService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getLocationList(location: string): Observable<string[]> {\r\n    return this.httpClient.get<string[]>(\r\n      `/api/get-auto-complete-locations/${location}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { LatLong } from \"../models/latlong.interface\";\r\nimport { Observable } from \"rxjs\";\r\nimport { WeatherResponse } from \"../models/weather-response.interface\";\r\n\r\n@Injectable()\r\nexport class WeatherLookupService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getLatLong(location: string): Observable<LatLong> {\r\n    return this.httpClient.get<LatLong>(\r\n      `/api/convert-location-to-geocode/${location}`\r\n    );\r\n  }\r\n\r\n  getWeather(geocode: LatLong): Observable<WeatherResponse> {\r\n    return this.httpClient.get<WeatherResponse>(\r\n      `/api/get-current-weather-data/${geocode.latitude}/${geocode.longitude}`\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output } from \"@angular/core\";\r\nimport { LocationConverstionService } from \"src/app/services/location-conversion.service\";\r\nimport { WeatherLookupService } from \"src/app/services/weather-lookup.service\";\r\nimport { LatLong } from \"src/app/models/latlong.interface\";\r\nimport { WeatherResponse } from \"src/app/models/weather-response.interface\";\r\nimport { WeatherData } from \"../models/weather-data.interface\";\r\nimport { Weather } from \"../models/weather.interface\";\r\n\r\n@Component({\r\n  selector: \"weather-dashboard\",\r\n  templateUrl: \"./weather-dashboard.component.html\",\r\n  styleUrls: [\"./weather-dashboard.component.scss\"]\r\n})\r\nexport class WeatherDashboard implements OnInit {\r\n  @Input(\"matAutocompletePosition\") position = \"below\";\r\n  locationOptions: string[];\r\n  location: string = \"Baltimore,MD,USA\";\r\n  currentWeather: WeatherData;\r\n  hourly: Weather;\r\n  daily: Weather;\r\n  alerts: WeatherResponse[\"alerts\"];\r\n  timezone: WeatherResponse[\"timezone\"];\r\n  isValidSearch: boolean = false;\r\n  constructor(\r\n    private locationConverstionService: LocationConverstionService,\r\n    private weatherService: WeatherLookupService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  locationQuery(event: string) {\r\n    this.locationConverstionService\r\n      .getLocationList(event)\r\n      .subscribe((places: string[]) => {\r\n        this.locationOptions = places;\r\n      });\r\n  }\r\n\r\n  queryWeather(event: string) {\r\n    this.location = event;\r\n    this.weatherService.getLatLong(event).subscribe((geocode: LatLong) => {\r\n      this.weatherService\r\n        .getWeather(geocode)\r\n        .subscribe((weather: WeatherResponse) => {\r\n          this.currentWeather = weather.currently;\r\n          this.hourly = weather.hourly;\r\n          this.daily = weather.daily;\r\n          this.alerts = weather.alerts;\r\n          this.timezone = weather.timezone;\r\n        });\r\n    });\r\n  }\r\n}\r\n","<current-weather\r\n  [currentWeather]=\"currentWeather\"\r\n  [location]=\"location\"\r\n  [locationOptions]=\"locationOptions\"\r\n  [alerts]=\"alerts\"\r\n  (locationQuery)=\"locationQuery($event)\"\r\n  (weatherQuery)=\"queryWeather($event)\"\r\n></current-weather>\r\n<forecast-component [forecast]=\"hourly\">\r\n  <h1 class=\"card-title\">48-Hour Forecast</h1>\r\n</forecast-component>\r\n\r\n<forecast-component [forecast]=\"daily\">\r\n  <h1 class=\"card-title\">7-Day met</h1>\r\n</forecast-component>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\n\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\n\r\nimport { LocationSearchComponent } from \"../location-search/location-search.component\";\r\nimport { LocationConverstionService } from \"../services/location-conversion.service\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { WeatherLookupService } from \"../services/weather-lookup.service\";\r\nimport { WeatherDashboard } from \"./weather-dashboard.component\";\r\nimport { CurrentWeatherComponent } from \"../current-weather/current-weather.component\";\r\nimport { ForecastComponent } from \"../forecast/forecast.component\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { AlertComponent } from \"../alert/alert.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LocationSearchComponent,\r\n    CurrentWeatherComponent,\r\n    WeatherDashboard,\r\n    ForecastComponent,\r\n    AlertComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [LocationConverstionService, WeatherLookupService],\r\n  exports: [\r\n    LocationSearchComponent,\r\n    CurrentWeatherComponent,\r\n    WeatherDashboard,\r\n    ForecastComponent,\r\n    AlertComponent\r\n  ]\r\n})\r\nexport class WeatherModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}